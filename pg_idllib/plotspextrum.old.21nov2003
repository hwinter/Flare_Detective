;+
; NAME:
;      pg_plotspextrum
;
; PURPOSE: 
;      plot a spectrum from an input spex_structure
;
; INPUTS:
;      spst: spex structure, defined as:
;  spex_st = {xselect:xselect, apar_arr:apar_arr, apar_sigma:apar_sigma $
;  ,chi:chi, convi:convi, obsi:obsi, eobsi:eobsi, backi :backi, ebacki:ebacki $
;  ,f_model:f_model, free: free, erange:erange, tb:tb, ut:ut $
;  ,iselect:iselect, date:anytim(uts,/date_only), edges:edges, apar:apar $
;  ,ifirst:ifirst, ilast:ilast, epivot:epivot, back_order:back_order}
;
; 
;  
; OUTPUTS:
;      none
;      
; KEYWORDS:
;      n_spec: in case of multiple spectra, choose the one to plot
;              0 or greater--> number  
;              undefined : take ifirst
;              -1 : there is only one spectrum (use apar instead
;              of apar_arr)
;      xlog,ylog: if set to 0 inhibits the log plot (which is default)
;      psym: is ignored
;      modthick: thickness of model lines (2 is default)
;
; HISTORY:
;       23-OCT-2003 written
;       05-NOV-2003 made more general in scope
;       19-NOV-2003 improved, now works on a different concept...
;
; TO_DO: -- update documentation, polish up
;        -- future: let it works for arbitrary model... (->taking
;           input from spec model_component.pro)
;
; AUTHOR
;       Paolo Grigis, Institute for Astronomy, ETH, Zurich
;
;-

PRO pg_plotspextrum, spst,n_spec= n_spec, xlog=xlog, ylog=ylog,psym=psym $
                   , modthick=modthick, modcolor=modcolor, modstyle=modstyle $
                   , color=color, spthick=spthick, xtitle=xtitle $
                   , ytitle=ytitle,charsize=charsize,overplot=overplot $
                   , nodata=nodata,erebin=erebin,nrebin=nrebin,_extra=_extra


xlog=fcheck(xlog,1)
ylog=fcheck(ylog,1)
xtitle=fcheck(xtitle,'Energy (keV)')
ytitle=fcheck(ytitle,'Photon flux (photons s!E-1!N cm!E-2!N keV!E-1!N)')
modthick=fcheck(modthick,2)
modcolor=fcheck(modcolor,[7,5,4,12,1,8,9,11,10])
modstyle=fcheck(modstyle,0)

psym=3

IF n_elements(n_spec) LT 1 THEN n_spec=spst.ifirst

IF n_spec LT 0 THEN BEGIN
    useapar=1
    n_spec=0
    ENDIF $
ELSE useapar=0

;selected_interval=spst.xselect[*,n_spec]+anytim(spst.date)


edge_products,spst.edges,mean=energybins,edges_2=energyedges
IF keyword_set(erebin) AND keyword_set(nrebin) THEN BEGIN

    energyedges_rebin=pg_edges_rebin(energyedges,erebin,nrebin)
    edge_products,energyedges_rebin,mean=energybins

    IF NOT keyword_set(nodata) THEN BEGIN
        phflux = (spst.obsi[*,n_spec]-spst.backi[*,n_spec])/spst.convi[*,n_spec]

        errflux = sqrt(spst.eobsi[*,n_spec]^2 + spst.ebacki[*,n_spec]^2)/spst.convi[*,n_spec]

        phflux=pg_rebin(energyedges,phflux,energyedges_rebin)
        errflux=pg_rebin(energyedges,errflux,energyedges_rebin)

    energyedges=energyedges_rebin
    
    ENDIF
   
ENDIF ELSE $
IF NOT keyword_set(nodata) THEN BEGIN
phflux = (spst.obsi[*,n_spec]-spst.backi[*,n_spec])/spst.convi[*,n_spec]

errflux = sqrt(spst.eobsi[*,n_spec]^2 + spst.ebacki[*,n_spec]^2)/spst.convi[*,n_spec]
ENDIF





;known models with set of parameter to plot in different colors
;for each color, used apar= apar*mask[*,model_index]
; ptrmodpar=ptrarr(2)

; ptrmodpar[0]=ptr_new({ $
;              model: 'f_vth_bpow', $
;              mask: [$
;                     [1,1,0,0,0,0], $
;                     [0,0,1,1,1,1]]})

; ptrmodpar[1]=ptr_new({ $
;              model: 'f_multi_spec', $
;              mask: [$
;                     [1,1,0,0,0,0,0,0], $
;                     [0,0,1,1,0,0,0,0], $
;                     [0,0,0,0,1,1,1,1]]})




;temp1 = kev2kel(spst.apar_arr[1])/1e6
;tempstr1 = strtrim(string(temp1, format='(f9.1)'), 2)+' MK'
;em1 = spst.apar_arr[0]
;emstr1 = strtrim(string(em1, format='(f9.4)'), 2)

;temp2 = kev2kel(spst.apar_arr[3])/1e6
;tempstr2 = strtrim(string(temp2, format='(f9.1)'), 2)+' MK'
;em2 = spst.apar_arr[2]
;emstr2 = strtrim(string(em2, format='(f9.4)'), 2)

IF NOT((keyword_set(overplot)) OR (keyword_set(nodata))) THEN $
  plot, energybins, phflux[*],xlog=xlog,ylog=ylog,psym=psym,color=color $
                             ,xtitle=xtitle,ytitle=ytitle,_extra=_extra




;, /xstyle, /ystyle $;, psym = 10 $
;  , xrange = [3, 300], yrange = [1e-3, 1e4], psym = 3, _extra = _extra; $
  ;, xtitle = 'Temp1: '+tempstr1+'  EM1:'+emstr1+'  Temp2:'+tempstr2+'  EM2:'+emstr2 $
  ;, ytitle = 'Flux', title = time_intv[0]+' - '+ time_intv[1]


; model=call_function(spst.f_model,energyedges,spst.apar)

; dontstopyet=1
; nonefound=0
; n=n_elements(ptrmodpar)-1

; i=-1
; WHILE dontstopyet AND NOT nonefound DO BEGIN
; i=i+1
; model=(*ptrmodpar[i]).model
; IF (model EQ spst.f_model) THEN dontstopyet=0 ELSE $
;   IF i EQ n THEN nonefound=1
; ENDWHILE 

; IF NOT nonefound THEN BEGIN

; mod_struct=*ptrmodpar[i]
; nmod=(size(mod_struct.mask))[2]

;    FOR i=0,nmod-1 DO BEGIN

;        oplot,  energybins, f_multi_spec(energyedges, spst.apar*mod_struct.mask[*,i]), color = color[i]   
;    ENDFOR

; ENDIF
;oplot,  energybins, f_multi_spec(energyedges, [spst.apar_arr[0], spst.apar_arr[1], 0, 1, 0, 0, 0, 0]), color = 7

;oplot,  energybins, f_multi_spec(energyedges, [ 0, 1, spst.apar_arr[2:3], 0, 0, 0, 0]), color = 4

;oplot, energybins, f_multi_spec(energyedges, spst.apar_arr), color = 12







; oplot, energybins, model , color = 12
IF NOT keyword_set(nodata) THEN BEGIN 

;IF NOT keyword_set(overplot) THEN $

for i = 0, n_elements(phflux)-1 do $
oplot, energyedges[*, i], [phflux[i], phflux[i]],color=color,thick=spthick

for i = 0, n_elements(phflux)-1 do $
oplot, [energybins[i], energybins[i]], [phflux[i], phflux[i]+errflux[i]],color=color,thick=spthick

for i = 0, n_elements(phflux)-1 do $
oplot, [energybins[i], energybins[i]], [phflux[i], (phflux[i]-errflux[i]) > (machar()).xmin],color=color,thick=spthick

ENDIF

;model: f_multi_spec
IF (NOT keyword_set(overplot)) AND keyword_set(nodata) THEN $
  plot,  energybins, f_multi_spec(energyedges, [spst.apar_arr[0,n_spec], spst.apar_arr[1,n_spec], 0, 1, 0, 0, 0, 0]), color = modcolor[0],thick=modthick,linestyle=modstyle,xlog=xlog,ylog=ylog,psym=psym $
                             ,xtitle=xtitle,ytitle=ytitle,_extra=_extra $
ELSE $
  oplot,  energybins, f_multi_spec(energyedges, [spst.apar_arr[0,n_spec], spst.apar_arr[1,n_spec], 0, 1, 0, 0, 0, 0]), color = modcolor[0],thick=modthick,linestyle=modstyle


;oplot,  energybins, f_multi_spec(energyedges, [ 0, 1, spst.apar_arr[2:3,n_spec], 0, 0, 0, 0]), color = modcolor[1]

oplot,  energybins, f_multi_spec(energyedges, [ 0, 1, 0, 1, spst.apar_arr[4:9,n_spec]]), color = modcolor[2],thick=modthick,linestyle=modstyle



oplot, energybins, f_multi_spec(energyedges, spst.apar_arr[*,n_spec]), color = modcolor[3],thick=modthick,linestyle=modstyle



END











