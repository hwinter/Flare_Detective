;
;This is version 2 of hedc_solar_event.pro. 
;The first version was last saved on 2002/05/11: it assumed a rough time interval as input, whence everything else was derived.
;In version 2, it is assumed that the input are the flare times. Actual observing times are the same, plus 5 minutes on each sides.
;
;
;
;=======================================================================================================================
;=======================================================================================================================
; the following is to write an .einfo ascii file readable by Etzard for import.
PRO write_hedc_event,a,filename

b={HEDC_EVENT_SCHEMA_1,									$		
	s12_hle_code 	: a.EVENT_CODE,							$
	i07_hle_eventID : a.EVENT_ID_NUMBER,						$
	c04_hle_eventType : a.EVENT_TYPE,						$
	i05_hle_minEnergy : a.MIN_ENERGY_FOUND,						$
	i05_hle_MAXENERGY :	a.MAX_ENERGY_FOUND,					$
	f12_hle_totalCounts : a.TOTAL_COUNTS_12_25,					$
	f04_hle_distanceSun : -9999.,							$
	f04_hle_xpos : '-9999',								$
	f04_hle_ypos : '-9999',								$
	dat_hle_creationDate : anytim2oracle(a.CREATION_DATE),				$
	dat_hle_startDate : anytim2oracle(a.START_DATETIME),				$
	i08_hle_startTime : a.START_TIMEOFDAY,						$
	dat_hle_endDate	: anytim2oracle(a.END_DATETIME),				$
	i08_hle_endTime : a.END_TIMEOFDAY,						$
	i08_hle_duration : a.DURATION,							$
	dat_hle_pDate_3_6k	: anytim2oracle(a.PEAK_DATETIME_3_12),			$
	i08_hle_pTime_3_6k	: a.PEAK_TIMEOFDAY_3_12,				$
	f10_hle_pCts_3_6k	: a.PEAK_COUNTRATE_3_12,				$
	i08_hle_dura_3_6k	: a.TOTAL_COUNTS_3_12,					$
	dat_hle_pDate_12_25k: anytim2oracle(a.PEAK_DATETIME_12_25),			$	
	i08_hle_pTime_12_25k: a.PEAK_TIMEOFDAY_12_25,					$
	f10_hle_pCts_12_25k	: a.PEAK_COUNTRATE_12_25,				$
	i08_hle_dura_12_25k	: a.TOTAL_COUNTS_12_25,					$
	dat_hle_pDate_1_20M	: anytim2oracle(a.PEAK_DATETIME_25_100),		$
	i08_hle_pTime_1_20M	: a.PEAK_TIMEOFDAY_25_100,				$
	f10_hle_pCts_1_20M	: a.PEAK_COUNTRATE_25_100,				$
	i08_hle_dura_1_20M	: a.TOTAL_COUNTS_25_100,				$
	f06_hle_peakRatio	: STRN(a.PEAK_RATIO,format='(f12.3)'),			$
	i02_hle_multiplicity : a.MULTIPLICITY,						$
	s06_hle_activeRegion : STRING(a.ACTIVE_REGION),					$
	boo_hle_simulatedData: a.SIMULATED,						$
	boo_hle_saa :	a.SAA_FLAG,							$
	boo_hle_eclipse : a.ECLIPSE_FLAG,						$
	f10_hle_backgndRate : a.BCKGND_RATE_12_25,					$
	txt_hle_files : a.RELATED_FILES,						$
	s20_hle_reserve1	: a.RESERVE1,						$
	s20_hle_reserve2	: a.RESERVE2,						$
	s20_hle_reserve3	: a.RESERVE3,						$
	s20_hle_reserve4	: a.RESERVE4,						$
	i10_hle_reserve1	: a.FLARELISTNBR,					$
	i10_hle_reserve2	: a.RESERVE6,						$
	f10_hle_reserve1	: a.RESERVE7,						$
	f10_hle_reserve2	: a.RESERVE8,						$
	txt_hle_comments	: a.COMMENTS	}
		
if a.DISTANCE_FROM_SUN_CENTER ne -9999. then b.f04_hle_distanceSun = STRN(a.DISTANCE_FROM_SUN_CENTER,format='(f6.1)')
if a.X_OFFSET ne -9999. then b.f04_hle_xpos = STRN(a.X_OFFSET,format='(f6.1)')
if a.Y_OFFSET ne -9999. then b.f04_hle_ypos = STRN(a.Y_OFFSET,format='(f6.1)')

FILE_DELETE,filename,/QUIET
printai,b,filename=filename
END
;=======================================================================================================================
PRO hedc_make_event_struct,time_interval,etype,idnbr,a,	$
	creator=creator,einfodir=einfodir

if not keyword_set(einfodir) then einfodir=getlog('HEDC_DATA_DIR')

a={HEDC_EVENT_STRUCT_2, Structure_version: 1,				$
			EVENT_CREATOR: 'HEDC',				$
			EVENT_TYPE:'-9999',				$
			EVENT_CODE:'HEC',				$
			EVENT_ID_NUMBER:-9999L,				$
			MIN_ENERGY_FOUND:-9999,				$
			MAX_ENERGY_FOUND:-9999,				$
			X_OFFSET:-9999.,				$
			Y_OFFSET:-9999.,				$
			DISTANCE_FROM_SUN_CENTER:-9999.,		$
						
			START_DATETIME:	'-9999',			$
			START_TIMEOFDAY:-9999.D,			$
			END_DATETIME: 	'-9999',			$
			END_TIMEOFDAY:	-9999.D,			$
			DURATION: 	-9999.D,				$
			
			PEAK_DATETIME_12_25:'-9999',		$
			PEAK_TIMEOFDAY_12_25:-9999.D,		$
			PEAK_COUNTRATE_12_25:-9999.D,		$
			TOTAL_COUNTS_12_25:-9999L,			$			

			PEAK_RATIO	:-9999.,				$
			MULTIPLICITY	:-9999,				$
			ACTIVE_REGION	:-9999,				$
			
			PEAK_DATETIME_3_12: '-9999',		$
			PEAK_TIMEOFDAY_3_12:-9999.D,		$
			PEAK_COUNTRATE_3_12:-9999.D,		$
			TOTAL_COUNTS_3_12:-9999L,			$
			
			PEAK_DATETIME_25_100	:'-9999',	$
			PEAK_TIMEOFDAY_25_100	:-9999.D,	$
			PEAK_COUNTRATE_25_100	:-9999.D,	$
			TOTAL_COUNTS_25_100	:-9999L,	$	
			
			SIMULATED	:-9999,					$
			SAA_FLAG	:-9999,					$
			ECLIPSE_FLAG	:-9999,				$
			
			BCKGND_RATE_12_25:-9999.D,			$
			
			RESERVE1	:'9',					$	
			RESERVE2	:'-9999',				$			
			RESERVE3	:'-9999',				$
			RESERVE4	:'-9999',				$
			
			FLARELISTNBR	:-9999,					$
			RESERVE6	:-9999,					$			
			
			RESERVE7	:-9999.D,				$
			RESERVE8	:-9999.D,				$
			
			RELATED_FILES : '',					$
			
			CREATION_DATE	:'-9999',			$
			COMMENTS	:'-9999'}



a.EVENT_TYPE=etype
a.EVENT_ID_NUMBER=idnbr
if keyword_set(creator) then a.EVENT_CREATOR=creator
if not keyword_set(stdoutmarker) then stdoutmarker='HEDCout '

;SIMULATED
a.SIMULATED=0

;CREATION_DATE
bla=systime(/utc)
bla=strmid(bla,8,2)+'-'+strmid(bla,4,3)+'-'+strmid(bla,22,2)+' '+strmid(bla,11,8)
a.CREATION_DATE=anytim(bla,/ECS)

; COMMENTS :
;;;;a.COMMENTS='None. //'+'None again. //'

;write to stdoutput with everything...
printai,a
END
;=======================================================================================================================



;=======================================================================================================================
;=======================================================================================================================
;=======================================================================================================================
;=======================================================================================================================
;=======================================================================================================================
;=======================================================================================================================
PRO hedc_solar_event,flare_time_interval,			$
	;ENV keywords:
	newdatadir=newdatadir,					$
	ZBUFFER=ZBUFFER,					$
	pictype=pictype,					$
	charsize=charsize,					$	
	acctime=acctime,					$
	BREAKONDPERROR=BREAKONDPERROR,				$
	NOFLAGCHECK=NOFLAGCHECK,				$	; IF set, will NOT check for SAA and NIGHT flags.
	addPMTtime=addPMTtime,					$	; only for imaging...
	addOBStime=addOBStime,					$	; at both ends, for a better overview..
	
	;info keywords:
	eventtype=eventtype,					$
	eventidnbr=eventidnbr,					$	
	creator=creator	,					$

	;the following keywords, if not set, will imply processing:
	xyoffset=xyoffset,					$	;SIDE EFFECT IF NOT SET: a full sun IMAGE is created
	backgndtime=backgndtime,				$	;FOR COUNTS and SPEX (not yet implemented), CAN be outside obs_time_interval
	nbrsources=nbrsources,					$
	NOFLARELISTSEARCH=NOFLARELISTSEARCH,			$

	;'to do' keywords
	TE_IMG=TE_IMG,						$
	SC_IMG=SC_IMG,						$
	ROI_CUM=ROI_CUM,					$
	SPECTRA=SPECTRA,					$
	OS_PAGE=OS_PAGE,					$
	HSPG=HSPG,						$
	PHOENIX=PHOENIX,					$
	HP_SPG=HP_SPG,						$
	ASPECT=ASPECT,						$
	addimgtimes=addimgtimes,				$	; do additional images at addimgtimes. Can be 1-D array of anytims

	MINIMUM=MINIMUM,					$	
	STD=STD
;================================================================	
	startsystime=SYSTIME(/SEC)
	
	;Some parameters...
	DPjobNbr=0
	DPjobDone=0
	imgnbr=-1
	es=0	;Error_Status
	
	IF NOT KEYWORD_SET(TE_IMG) THEN TE_IMG=0
	IF NOT KEYWORD_SET(SC_IMG) THEN SC_IMG=0
	IF NOT KEYWORD_SET(OS_PAGE) THEN OS_PAGE=0
	IF NOT KEYWORD_SET(ASPECT) THEN ASPECT=0
	IF NOT KEYWORD_SET(SPECTRA) THEN SPECTRA=0
	IF NOT KEYWORD_SET(HSPG) THEN HSPG=0
	IF NOT KEYWORD_SET(PHOENIX) THEN PHOENIX=0
	IF NOT KEYWORD_SET(ROI_CUM) THEN ROI_CUM=0
	IF NOT KEYWORD_SET(HP_SPG) THEN HP_SPG=0	
	IF KEYWORD_SET(STD) THEN BEGIN
		OS_PAGE=1 & ASPECT=1  & SPECTRA=1 & HP_SPG=1 & SC_IMG=1 & ROI_CUM=1           & nbrsources=-9999
	ENDIF	
	IF KEYWORD_SET(MINIMUM) THEN BEGIN	
		OS_PAGE=1 & ASPECT=1  & SPECTRA=1 & HP_SPG=1 & nbrsources=-9999 & NOFLARELISTSEARCH=1 ;& NOFLAGCHECK=1
	ENDIF	
					
	CBAR=1
	
	;ENV:
	IF NOT KEYWORD_SET(newdatadir) THEN newdatadir='/global/hercules/users/shilaire/HEDC/NEWDATA/'	
	IF NOT KEYWORD_SET(addPMTtime) THEN addPMTtime=1800	; on both sides !!!
	IF NOT KEYWORD_SET(addOBStime) THEN addOBStime=300	; on both sides !!!
	obs_time_interval=anytim(flare_time_interval)+addOBStime*[-1,1]
	t0=anytim(obs_time_interval(0))
	IF KEYWORD_SET(ZBUFFER) THEN BEGIN
		old_device=!D.NAME
		SET_PLOT,'Z',/COPY
	ENDIF
	hedc_win
	!P.MULTI=0
	hessi_ct
	TVLCT,r,g,b,/GET
	IF NOT KEYWORD_SET(pictype) THEN pictype='png'
	IF NOT KEYWORD_SET(charsize) THEN BEGIN
		IF NOT KEYWORD_SET(ZBUFFER) THEN charsize=1.2 ELSE charsize=1.0
	ENDIF

	;info:
	IF NOT KEYWORD_SET(eventtype) THEN eventtype='S'
	IF NOT KEYWORD_SET(eventidnbr) THEN eventidnbr=-9999L	; not used, now (2002/04/26)
	IF NOT KEYWORD_SET(creator) THEN creator='HEDC'



;//create ev_struct
	hedc_make_event_struct,flare_time_interval,eventtype,eventidnbr,ev_struct,CREATOR=creator,einfodir=newdatadir
	; at this point, we have all that is needed in ev_struct for future hedc_write_info_file.pro, except MIN & MAX energy found... (who cares: only for os01 DPs...)
	;	AND MOST IMPORTANTLY, EVENT_CODE !!!

	;processing:
	IF NOT KEYWORD_SET(backgndtime) THEN backgndtime=anytim(obs_time_interval(0))+[0.,60.]	

	;FIRST: LIGHTCURVES !!!!
		;must do a lightcurve...and find XXXtim...
		lco=hsi_lightcurve()
		ebands=[3,6,12,25,50,100,300]		; should never change this value .... I assumed some stuff, later on...
		TIMEBIN=4.  				; should never change this value .... I assumed some stuff, later on...
		lco->set,ltc_time_res=TIMEBIN,ltc_energy_band=ebands,SEG_INDEX_MASK=[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],/SP_SEMI_CAL
		
		lco->set,time_range=anytim(backgndtime)
		back_lc=lco->getdata()
	IF N_ELEMENTS(back_lc) EQ 1 THEN RETURN
		PRINT,'.........................RETRIEVING BACKGROUND LIGHTCURVE'
		back_times=lco->getdata(/xaxis)
		PRINT,' Mean of background at 12-25 keV: '+strn(MEAN(back_lc(*,2)))+' counts (timebinning: '+strn(TIMEBIN)+' seconds.)'
		PRINT,' Sigma of background at 12-25 keV: '+strn(STDEV(back_lc(*,2)))

	;average out to get the mean backgnd levels:
		FOR i=0,N_ELEMENTS(ebands)-2 DO BEGIN
			IF NOT EXIST(backgnd_lvl) THEN backgnd_lvl=MEAN(back_lc(*,i)) ELSE backgnd_lvl=[backgnd_lvl,MEAN(back_lc(*,i))]
		ENDFOR
		
		lco->set,time_range=anytim(obs_time_interval)
		PRINT,'.........................RETRIEVING RAW LIGHTCURVE'
		raw_lc=lco->getdata()
	IF N_ELEMENTS(raw_lc) EQ 1 THEN RETURN
		lc_all=raw_lc

;BACKGROUND SUBTRACTION
;	PRINT,'....... SUBTRACTING BACKGROUND LEVELS FROM LIGHTCURVES...'
;		FOR i=0,N_ELEMENTS(ebands)-2 DO lc_all(*,i)=raw_lc(*,i)-backgnd_lvl(i)
		
		lc=lc_all(*,2)
		taxis=lco->getdata(/xaxis)

	;peaktim = where it is highest in 12-25 range
		maxcounts=max(lc,ss)
		PRINT,'Peak number of counts in our timebin: '+strn(maxcounts)
		peaktim=taxis(ss(0))
		print,'PEAK TIME is: '+anytim(peaktim,/ECS)
		ev_struct.PEAK_DATETIME_12_25=anytim(peaktim,/ECS)
		ev_struct.PEAK_TIMEOFDAY_12_25=anytim(peaktim,/time_only)


;//define eventcode : need peaktim
	tmp=anytim(peaktim,/ex)
	eventcode='HX'+eventtype+int2str(tmp(6)-2000,1)+int2str(tmp(5),2)+int2str(tmp(4),2)+int2str(tmp(0),2)+int2str(tmp(1),2)
	ev_struct.EVENT_CODE=eventcode

	;peak rates
		ev_struct.PEAK_COUNTRATE_12_25=lc(ss(0))/TIMEBIN
		ev_struct.PEAK_RATIO=lc_all(ss(0),3)/lc_all(ss(0),2)	; 25-50/12-25

	;get halftim1&2
		ss=WHERE(lc ge maxcounts*0.5)
		halftim1=taxis(ss(0))
		halftim2=taxis(ss(N_ELEMENTS(ss)-1))
		print,'HALF TIMES are: '+anytim(halftim1,/ECS)+' and '+anytim(halftim2,/ECS)

	;get begintim & endtim & duration
	;;OLD WAY (Version 1):
	;	ss=WHERE(lc ge maxcounts*0.1,nbr)
	;	ss_beg=ss(0)
	;	ss_end=ss(nbr-1)
	;;NEW WAY (Version 2):
		ss=WHERE(taxis GE anytim(flare_time_interval(0)))
		ss_beg=ss(0)
		ss=WHERE(taxis GE anytim(flare_time_interval(1)))
		ss_end=ss(0)
				

		tmp=taxis(ss_beg)
		ev_struct.START_DATETIME=anytim(tmp,/ECS)
		ev_struct.START_TIMEOFDAY=anytim(tmp,/time_only)
		tmp=taxis(ss_end)
		ev_struct.END_DATETIME=anytim(tmp,/ECS)
		ev_struct.END_TIMEOFDAY=anytim(tmp,/time_only)
		ev_struct.DURATION=anytim(ev_struct.END_DATETIME)-anytim(ev_struct.START_DATETIME)

		ev_struct.TOTAL_COUNTS_3_12=	TOTAL(lc_all(ss_beg:ss_end,0:1))/1000000.
		ev_struct.TOTAL_COUNTS_12_25=	TOTAL(lc_all(ss_beg:ss_end,2))/1000.
		ev_struct.TOTAL_COUNTS_25_100=	TOTAL(lc_all(ss_beg:ss_end,3:4))/1000.


		tmp=max(TOTAL(lc_all(*,0:1),2),ss)
		ev_struct.PEAK_DATETIME_3_12=anytim(taxis(ss(0)),/ECS)
		ev_struct.PEAK_COUNTRATE_3_12=tmp/TIMEBIN/1000000
		ev_struct.PEAK_TIMEOFDAY_3_12=anytim(taxis(ss(0)),/time_only)

		tmp=max(TOTAL(lc_all(*,3:4),2),ss)
		ev_struct.PEAK_DATETIME_25_100=anytim(taxis(ss(0)),/ECS)
		ev_struct.PEAK_COUNTRATE_25_100=tmp/TIMEBIN
		ev_struct.PEAK_TIMEOFDAY_25_100=anytim(taxis(ss(0)),/time_only)

		info=lco->get()
		hedc_win,768,512
		myct3
		TVLCT,r,g,b,/GET
	;PLOT & SAVE linear lightcurve:
		DPjobnbr=DPjobnbr+1		
		IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL01 & ENDIF & ENDIF
		rootfil=newdatadir+'HEDC_DP_lc00_'+eventcode
		lco->plot,charsize=charsize,title='Semi-calibrated HESSI counts'
		;DISPLAY BACKGROUND interval:
			tmp=REPLICATE(0.18*(!Y.CRANGE(1)-!Y.CRANGE(0))+!Y.CRANGE(0),N_ELEMENTS(back_times))
			oplot,back_times-t0,tmp,thick=3,color=250
			XYOUTS,/DATA,back_times(0)-t0,0.2*(!Y.CRANGE(1)-!Y.CRANGE(0))+!Y.CRANGE(0),'BACKGROUND',color=250
		CALL_PROCEDURE,'write_'+pictype,rootfil+'.'+pictype,TVRD(),r,g,b
		IF FILE_EXIST(rootfil+'.'+pictype) THEN hedc_write_info_file,'lc',ev_struct,info,rootfil+'.info'
		DPjobdone=DPjobdone+1
		LABEL01:
	;another ylog:
		DPjobnbr=DPjobnbr+1		
		IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL02 & ENDIF & ENDIF
		rootfil=newdatadir+'HEDC_DP_lc01_'+eventcode
		lco->plot,/ylog,charsize=charsize,title='Semi-calibrated HESSI counts'
		;DISPLAY BACKGROUND interval:
			tmp=REPLICATE(0.48*(!Y.CRANGE(1)-!Y.CRANGE(0))+!Y.CRANGE(0),N_ELEMENTS(back_times))
			oplot,back_times-t0,10^tmp,thick=3,color=250
			XYOUTS,/DATA,back_times(0)-t0,10^(0.5*(!Y.CRANGE(1)-!Y.CRANGE(0))+!Y.CRANGE(0)),'BACKGROUND',color=250
		CALL_PROCEDURE,'write_'+pictype,rootfil+'.'+pictype,TVRD(),r,g,b
		IF FILE_EXIST(rootfil+'.'+pictype) THEN hedc_write_info_file,'lc',ev_struct,info,rootfil+'.info'
		DPjobdone=DPjobdone+1		
		LABEL02:

		obj_destroy,lco		
		
	
	;ACCUMULATION TIME FOR IMAGING & SPECTROSCOPY:	
	IF NOT KEYWORD_SET(acctime) THEN BEGIN
		;tmp=anytim(peaktim)-anytim(halftim1)
		;IF tmp LT 4. THEN acctime=4. ELSE acctime=4.*FIX(tmp/4)
		;acctime = acctime < 12.
		acctime = 20000/(maxcounts/TIMEBIN/9)
		spin_period=4.
		acctime = DOUBLE(spin_period*FIX(acctime / spin_period))
		acctime = 3*spin_period > acctime
		acctime = 15*spin_period < acctime 
	ENDIF


;FULL SUN IMAGE (for now: do it always, whatever the status of the xyoffset keyword...)
imgnbr=imgnbr+1
		DPjobnbr=DPjobnbr+1		
		IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL03 & ENDIF & ENDIF
		imgdim=128
		pixsiz=16
		hessi_ct
		TVLCT,r,g,b,/GET
				
		imo=hsi_image()		
		imo->set,obs_time_interval=anytim(obs_time_interval)+[-addPMTtime,addPMTtime]
		imo->set,image_dim=imgdim,pixel_size=pixsiz,det_index_mask=[0,0,0,0,0,0,1,1,1],image_alg='back',uniform=1
		imo->set,xyoffset=[0,0],energy_band=[12,25]
		imo->set,as_roll_solution='PMT', ras_time_extension=[-500,500]
		imo->set_no_screen_output

		imo->set,time_range=anytim(peaktim)+acctime*[-0.5,0.5]		;anytim([halftim1,halftim2])-t0	
		hedc_win
		PRINT,'.........................FULL SUN image'
		IF CBAR EQ 1 THEN imo->plot,/limb,charsize=charsize,/CBAR  ELSE imo->plot,margin=0.07,/limb,charsize=charsize
		
		rootfilename=newdatadir+'HEDC_DP_im00_'+eventcode
		CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
		info=imo->get()
		IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'im',ev_struct,info,rootfilename+'.info'
		imo->fitswrite,fitsfile=rootfilename+'.fits',/CREATE
		DPjobdone=DPjobdone+1		
		LABEL03:
						
	IF NOT KEYWORD_SET(xyoffset) THEN BEGIN		
		data=imo->getdata()
		;xyoffset of brightest pixel
		ij=max2d(data)
		xoffset=(ij(0)-imgdim/2)*pixsiz
		yoffset=(ij(1)-imgdim/2)*pixsiz
	ENDIF ELSE BEGIN
		xoffset=xyoffset(0)
		yoffset=xyoffset(1)
	ENDELSE
	
	xoffset=DOUBLE(xoffset)
	yoffset=DOUBLE(yoffset)
	
	imo->set,xyoffset=[xoffset,yoffset]

	ev_struct.DISTANCE_FROM_SUN_CENTER=FIX( sqrt(xoffset^2 + yoffset^2) )
	ev_struct.X_OFFSET=xoffset
	ev_struct.Y_OFFSET=yoffset

;SOURCE MULTIPLICITY
	IF NOT KEYWORD_SET(nbrsources) THEN BEGIN
imgnbr=imgnbr+1
		imo->set,energy_band=[25,50],image_alg='clean',image_dim=128,pixel_size=1,det_index_mask=[0,0,1,1,0,1,1,1,1],time_range=anytim(peaktim)+acctime*[-0.5,0.5]	;,time_range=anytim([halftim1,halftim2])-t0
		PRINT,'.........................SOURCE MULTIPLICITY'
		imo->set_no_screen_output
		tmp=imo->getdata() 
		find_sources,tmp,nb,pos,n_sigma=5,back_pix=0.2,low=0.2,/quiet
		;Now, the limit on low depends on Hessi's imaging dynamic range...
		ev_struct.MULTIPLICITY=nb
	
		IF CBAR EQ 1 THEN imo->plot,grid=10,charsize=charsize,/CBAR  ELSE imo->plot,margin=0.07,grid=10,charsize=charsize
		rootfilename=newdatadir+'HEDC_DP_im'+int2str(imgnbr,2)+'_'+eventcode
		CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
		info=imo->get()
		IF FILE_EXIST(rootfilename+pictype) THEN hedc_write_info_file,'im',ev_struct,info,rootfilename+'.info'
		imo->fitswrite,fitsfile=rootfilename+'.fits',/CREATE
	ENDIF ELSE ev_struct.MULTIPLICITY=nbrsources

;HESSI FLARE LIST NUMBER :
	IF NOT KEYWORD_SET(NOFLARELISTSEARCH) THEN BEGIN
		flo = obj_new('hsi_flare_list')
		flo ->set,obs_time_interval = [ev_struct.START_DATETIME,ev_struct.END_DATETIME]
		bla = flo->getdata()
		if datatype(bla) eq 'STC' then ev_struct.FLARELISTNBR = bla(0).ID_NUMBER
		obj_destroy,flo
		delvarx,flo
	ENDIF


;SAA & NIGHT FLAGS
	IF NOT KEYWORD_SET(NOFLAGCHECK) THEN BEGIN
		es=0
		IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL16 & ENDIF & ENDIF		
		oso=hsi_obs_summary()
		oso->set,obs_time_interval=obs_time_interval
		flagdata=oso->getdata(class_name='obs_summ_flag')
		ss=WHERE(flagdata(0,*) NE 0)
		IF ss(0) NE -1 THEN ev_struct.SAA_FLAG=1 ELSE ev_struct.SAA_FLAG=0
		ss=WHERE(flagdata(1,ss_beg:ss_end) NE 0)
		IF ss(0) NE -1 THEN ev_struct.ECLIPSE_FLAG=1 ELSE ev_struct.ECLIPSE_FLAG=0
		LABEL16:
		OBJ_DESTROY,oso
	ENDIF




; Finished defining event, can save the .einfo file:
	;=====================================================================
	write_hedc_event,ev_struct,newdatadir+'HEDC_EVENT_'+eventcode+'.einfo'
	;=====================================================================


;===============================================================================================================================================
; 3x3 OR 5x5 PANEL 
IF ((TE_IMG NE 0) AND ((ss_end-ss_beg) GE 10)) THEN BEGIN
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL04 & ENDIF & ENDIF
	imo->set,image_alg='clean',pixel_size=2,det_index_mask=[0,0,1,1,0,1,1,1,1]
	
	IF (anytim(peaktim)-anytim(halftim1)) GT 30 THEN BEGIN
		time_intvs=[anytim(halftim1),(anytim(halftim1)+anytim(peaktim))/2.,anytim(peaktim),(anytim(peaktim)+anytim(halftim2))/2.,anytim(halftim2)]
		PRINT,'.........................5x5 Time-Energy PANEL'
		hedc_5x5_te_panel_plot,imo,time_intvs,acctime,dim=1000,charsize=charsize
	ENDIF ELSE BEGIN
		time_intvs=[anytim(halftim1),anytim(peaktim),anytim(halftim2)]
		PRINT,'.........................3x3 Time-Energy PANEL'
		hedc_3x3_te_panel_plot,imo,time_intvs,acctime,dim=900,charsize=charsize	
	ENDELSE
	TVLCT,r,g,b,/GET
	rootfilename=newdatadir+'HEDC_DP_pte5_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'te5',ev_struct,[time_intvs(0),time_intvs(N_ELEMENTS(time_intvs)-1)],rootfilename+'.info'
	DPjobdone=DPjobdone+1	
	LABEL04:
ENDIF
;===============================================================================================================================================
; 3x3 PANEL
IF SC_IMG NE 0 THEN BEGIN
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL05 & ENDIF & ENDIF
	PRINT,'.........................3x3 PANEL'
 	imo->set,image_alg='back'
	hedc_3x3_sc_panel_plot,imo,peaktim,32.,dim=900,showsc=[0,0,1,1,1,1,1,1,1],eband=[12,25]
	TVLCT,r,g,b,/GET
	rootfilename=newdatadir+'HEDC_DP_pscA_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'scA',ev_struct,anytim(peaktim)+acctime*[-0.5,0.5],rootfilename+'.info'	
	DPjobdone=DPjobdone+1
	LABEL05:
ENDIF
;===============================================================================================================================================
;ROI CUMULATIVE IMAGES: 
IF ROI_CUM NE 0 THEN BEGIN
	hessi_ct
	TVLCT,r,g,b,/GET
	hedc_win
	;==============================================================
	MINNBRCOUNTS=50000
	MAXNBRIMG=5

	imgalg='clean'
	pixelsiz=2
	imgdim=128
	detindex=[0,0,1,1,0,1,1,1,1]
	imo->set,pixel_size=pixelsiz,image_dim=imgdim,det_index_mask=detindex,image_alg=imgalg
		
	nbr_img_per_eband=BYTARR(5)
	cur_eband=0
	FOR i2=0,4 DO BEGIN
		CASE i2 OF
			0:BEGIN
				eband=[3,12]
				tim=hedc_determine_img_times(MINNBRCOUNTS,imgalg,taxis,ss_beg,ss_end,TOTAL(lc_all(*,0:1),2)/9)
				mvletter='A'
			END			
			1:BEGIN
				eband=[12,25]
				tim=hedc_determine_img_times(MINNBRCOUNTS,imgalg,taxis,ss_beg,ss_end,lc_all(*,2)/9)
				mvletter='B'									
			END			
			2:BEGIN
				eband=[25,50]
				tim=hedc_determine_img_times(MINNBRCOUNTS,imgalg,taxis,ss_beg,ss_end,lc_all(*,3)/9)
				mvletter='C'									
			END			
			3:BEGIN
				eband=[50,100]
				tim=hedc_determine_img_times(MINNBRCOUNTS,imgalg,taxis,ss_beg,ss_end,lc_all(*,4)/9)
				mvletter='D'									
			END			
			4:BEGIN
				eband=[100,300]
				tim=hedc_determine_img_times(MINNBRCOUNTS,imgalg,taxis,ss_beg,ss_end,lc_all(*,5)/9)
				mvletter='E'									
			END			
			ELSE: PRINT,'Nope'
		ENDCASE
	
		tmp=N_ELEMENTS(tim(0,*))
		IF tmp GT MAXNBRIMG THEN tim=tim(*,FIX(FINDGEN(MAXNBRIMG)*tmp/MAXNBRIMG))
	
		FOR i1=0,N_ELEMENTS(tim(0,*))-1 DO BEGIN
			DPjobnbr=DPjobnbr+1
			es=0
			IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & GOTO,LABEL17 & ENDIF & ENDIF		
			imo->set,image_alg=imgalg,energy_band=eband,time_range=anytim(tim(*,i1))
			imo->set_no_screen_output
			PRINT,'.........................ROI image: '+anytim(tim(i1),/ECS)+' ALG: '+imgalg+' '+strn(eband(0))+'-'+strn(eband(1))+' keV.'
			IF CBAR EQ 1 THEN imo->plot,grid=10,charsize=charsize,/CBAR  ELSE imo->plot,margin=0.07,grid=10,charsize=charsize
			rootfilename=newdatadir+'HEDC_DP_mov'+mvletter+'_frame'+int2str(i1,4)+'_'+eventcode
			CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
			info=imo->get()
			IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'im',ev_struct,info,rootfilename+'.info',framenbr=i1,moviename=eventtype+STRMID(eventcode,3)+mvletter
			imo->fitswrite,fitsfile=rootfilename+'.fits',/CREATE
			DPjobdone=DPjobdone+1
		;POINTERS............................................	
			tmp=imo->getdata()
			tmpImgInfoPTR=PTR_NEW(tmp)
			tmpImgInfoPTR=[tmpImgInfoPTR,PTR_NEW(info)]
			IF NOT EXIST(ImgInfoPTR) THEN ImgInfoPtr=tmpImgInfoPTR ELSE ImgInfoPtr=[[ImgInfoPtr],[tmpImgInfoPTR]]
			nbr_img_per_eband(cur_eband)=nbr_img_per_eband(cur_eband)+1
		;....................................................
			LABEL17:
			IF NOT KEYWORD_SET(BREAKONDPERROR) THEN CATCH,/CANCEL
		ENDFOR ;i1
		cur_eband=cur_eband+1
	ENDFOR ;i2
	hedc_5x5_panel,ImgInfoPtr,nbr_img_per_eband,[[3,12],[12,25],[25,50],[50,100],[100,300]]
	rootfilename=newdatadir+'HEDC_DP_pte5_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	info=imo->get()
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'im',ev_struct,info,rootfilename+'.info'
	PTR_FREE,ImgInfoPtr
ENDIF	
;===============================================================================================================================================
; Additional images:
IF KEYWORD_SET(addimgtimes) THEN BEGIN
	hessi_ct
	TVLCT,r,g,b,/GET
	hedc_win
	;==============================================================
	pixelsiz=1
	imgdim=128
	detindex=[0,0,1,1,0,1,1,1,0]
	
	imo->set,pixel_size=pixelsiz,image_dim=imgdim,det_index_mask=detindex
	
	tim=addimgtimes
	imgalg='clean'	;['clean','mem']
	eband=[25,50]	;[[3,12],[12,25],[25,50],[50,100]]
	
	FOR i1=0,N_ELEMENTS(tim)-1 DO BEGIN
		FOR i2=0,N_ELEMENTS(imgalg)-1 DO BEGIN
			FOR i3=0,N_ELEMENTS(eband(0,*))-1 DO BEGIN
imgnbr=imgnbr+1				
				DPjobnbr=DPjobnbr+1
				IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL15 & ENDIF & ENDIF
				imo->set,image_alg=imgalg(i2),energy_band=eband(*,i3),time_range=anytim(tim(i1))+acctime*[-0.5,0.5]
				imo->set_no_screen_output
				PRINT,'.........................MISC. IMAGE: '+anytim(tim(i1),/ECS)+' ALG: '+imgalg(i2)+' '+strn(eband(0,i3))+'-'+strn(eband(1,i3))+' keV.'
				IF CBAR EQ 1 THEN imo->plot,grid=10,charsize=charsize,/CBAR  ELSE imo->plot,margin=0.07,grid=10,charsize=charsize
				rootfilename=newdatadir+'HEDC_DP_im'+int2str(imgnbr,2)+'_'+eventcode
				CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
				info=imo->get()
				IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'im',ev_struct,info,rootfilename+'.info'
				imo->fitswrite,fitsfile=rootfilename+'.fits',/CREATE
				DPjobdone=DPjobdone+1
				LABEL15:
			ENDFOR
		ENDFOR
	ENDFOR
ENDIF
;===============================================================================================================================================
OBJ_DESTROY,imo
;===============================================================================================================================================
;SPECTRA
IF SPECTRA NE 0 THEN BEGIN 
	hedc_win,768,512
	myct3,ct=1
	TVLCT,r,g,b,/GET
	spo=hsi_spectrum()
	seg_index_mask=[1,0,1,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1]
	spo->set,obs_time_interval=obs_time_interval,seg_index_mask=seg_index_mask,sp_energy_bin=5,/sp_semi_cal
	title='HESSI flux vs. energy, semi-calibrated, WITH background'
	
;peaktim:
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL07 & ENDIF & ENDIF	
	spo->set,time_range=anytim(peaktim)-t0+acctime*[-0.5,0.5]
	PRINT,'.........................SPECTRUM : peaktime'
	spo->plot,charsize=charsize,title=title
	rootfilename=newdatadir+'HEDC_DP_sp01_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	info=spo->get()
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'sp',ev_struct,info,rootfilename+'.info'
	peak_sp=spo->getdata()
	DPjobdone=DPjobdone+1
	LABEL07:	
IF KEYWORD_SET(MINIMUM) THEN GOTO,LABEL10

;halftim1:
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL08 & ENDIF & ENDIF
	spo->set,time_range=anytim(halftim1)-t0+acctime*[-0.5,0.5]
	PRINT,'.........................SPECTRUM : halftim1'
	spo->plot,charsize=charsize,title=title
	rootfilename=newdatadir+'HEDC_DP_sp00_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD()
	info=spo->get()
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'sp',ev_struct,info,rootfilename+'.info'
	half1_sp=spo->getdata()
	DPjobdone=DPjobdone+1
	LABEL08:
;halftim2:
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL09 & ENDIF & ENDIF
	spo->set,time_range=anytim(halftim2)-t0+acctime*[-0.5,0.5]
	PRINT,'.........................SPECTRUM : halftim2'
	spo->plot,charsize=charsize,title=title
	rootfilename=newdatadir+'HEDC_DP_sp02_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD()
	info=spo->get()
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'sp',ev_struct,info,rootfilename+'.info'
	half2_sp=spo->getdata()
	DPjobdone=DPjobdone+1		
	LABEL09:
;3 spectra together:
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL10 & ENDIF & ENDIF
	ebins=spo->getdata(/xaxis)
	plot,ebins,half1_sp.flux,/xlog,/ylog,xtitle='Energy (keV)',ytitle='photons cm!U-2!N s!U-1!N keV!U-1!N',title=title,/nodata
	oplot,ebins,half1_sp.flux,color=249
	oplot,ebins,peak_sp.flux,color=251
	oplot,ebins,half2_sp.flux,color=254

	XYOUTS,/norm,0.8,0.8,' '+anytim(peaktim,/ECS,/date_only)
	XYOUTS,/norm,0.8,0.775,'Segments used:'
	tmp='  '
	FOR i=0,8 DO tmp=tmp+strn(seg_index_mask(i))
	XYOUTS,/norm,0.8,0.75,tmp
	tmp='  '
	FOR i=9,17 DO tmp=tmp+strn(seg_index_mask(i))
	XYOUTS,/norm,0.8,0.725,tmp
	
	XYOUTS,/norm,0.7,0.9,anytim(anytim(halftim1)-acctime/2.,/ECS,/time_only)+' to '+anytim(anytim(halftim1)+acctime/2,/ECS,/time_only),color=249
	XYOUTS,/norm,0.7,0.875,anytim(peaktim-acctime/2,/ECS,/time_only)+' to '+anytim(anytim(peaktim)+acctime/2,/ECS,/time_only),color=251
	XYOUTS,/norm,0.7,0.85,anytim(halftim2-acctime/2,/ECS,/time_only)+' to '+anytim(anytim(halftim2)+acctime/2,/ECS,/time_only),color=254
	rootfilename=newdatadir+'HEDC_DP_sp03_'+eventcode
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	info=spo->get()
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'sp',ev_struct,info,rootfilename+'.info'
	DPjobdone=DPjobdone+1		
	LABEL10:	
OBJ_DESTROY,spo
ENDIF
;===============================================================================================================================================
;OBS.SUMM. STUFF
IF OS_PAGE NE 0 THEN BEGIN
	DPjobnbr=DPjobnbr+1		
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL11 & ENDIF & ENDIF
	rootfilename=newdatadir+'HEDC_DP_os04_'+eventcode
	PRINT,'.........................OBS. SUMM. PAGE'
	obs_summ_page,obs_time_interval,filename=rootfilename+'.'+pictype
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'os4',ev_struct,obs_time_interval,rootfilename+'.info'
	
	hedc_win,630,512
	my_hessi_ct,colors
	plot_hessi_pos,obs_time_interval
	rootfilename=newdatadir+'HEDC_DP_os01_'+eventcode
	TVLCT,r,g,b,/GET
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'os1',ev_struct,obs_time_interval,rootfilename+'.info'
	DPjobdone=DPjobdone+1
	LABEL11:
	hessi_ct
ENDIF
;===============================================================================================================================================
; HESSI SPECTROGRAM
IF HSPG NE 0 THEN BEGIN
	DPjobnbr=DPjobnbr+1		
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL12 & ENDIF & ENDIF
	hedc_win,768,512
	PRINT,'.........................HESSI SPECTROGRAM'
	hsi_spg,anytim(obs_time_interval),/high
	rootfilename=newdatadir+'HEDC_DP_hsg0_'+eventcode
	TVLCT,r,g,b,/GET
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'hsg',ev_struct,obs_time_interval,rootfilename+'.info'
	DPjobdone=DPjobdone+1
	LABEL12:
ENDIF
;===============================================================================================================================================
; HESSI and PHOENIX SPECTROGRAMS
IF HP_SPG NE 0 THEN BEGIN
	DPjobnbr=DPjobnbr+1		
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL20 & ENDIF & ENDIF
	hedc_win,768,512
	PRINT,'.........................PHOENIX AND HESSI SPECTROGRAM'
	rapp_cmb_spg, obs_time_interval
	rootfilename=newdatadir+'HEDC_DP_spg1_'+eventcode
	TVLCT,r,g,b,/GET
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'hsg',ev_struct,obs_time_interval,rootfilename+'.info'
	DPjobdone=DPjobdone+1
	LABEL20:
ENDIF
;===============================================================================================================================================
; PHOENIX spectrogram
IF PHOENIX NE 0 THEN BEGIN
	DPjobnbr=DPjobnbr+1
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL13 & ENDIF & ENDIF
	hedc_win,768,512
	loadct,5
	PRINT,'.........................PHOENIX SPECTROGRAM'
	data=rapp_get_spectrogram(obs_time_interval,xaxis=xaxis,yaxis=yaxis,/ELIM,/BACK)
	IF datatype(data) EQ 'STR' THEN GOTO,LABEL13
	rapp_paint_spectrogram,data,xaxis,yaxis,/log,/despike
	rootfilename=newdatadir+'HEDC_DP_spg0_'+eventcode
	TVLCT,r,g,b,/GET
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'spg',ev_struct,obs_time_interval,rootfilename+'.info'
	DPjobdone=DPjobdone+1
	LABEL13:
ENDIF
;===============================================================================================================================================
;ASPECT SOLUTION
IF ASPECT NE 0 THEN BEGIN
	DPjobnbr=DPjobnbr+1		
olddevice=!D.NAME
	IF NOT KEYWORD_SET(BREAKONDPERROR) THEN BEGIN CATCH,es & IF es NE 0 THEN BEGIN es=0 & CATCH,/CANCEL & GOTO,LABEL14 & ENDIF & ENDIF
set_plot,'X'
	hedc_win,768,512
	ao=hsi_aspect_solution() 
	ao->set,aspect_cntl_level=6 	
	ao->set,obs_time_interval=anytim(obs_time_interval)
	PRINT,'.........................ASPECT'
	!P.MULTI=0	;;;;This should later be removed...
	as=ao->getdata()
	
	rootfilename=newdatadir+'HEDC_DP_os07_'+eventcode
	TVLCT,r,g,b,/GET
	CALL_PROCEDURE,'write_'+pictype,rootfilename+'.'+pictype,TVRD(),r,g,b
	IF FILE_EXIST(rootfilename+'.'+pictype) THEN hedc_write_info_file,'os7',ev_struct,obs_time_interval,rootfilename+'.info'
	DPjobdone=DPjobdone+1		
	LABEL14:
set_plot,olddevice		
	obj_destroy,ao
ENDIF
;===============================================================================================================================================
IF KEYWORD_SET(ZBUFFER) THEN BEGIN
        DEVICE,/CLOSE
        SET_PLOT,old_device
ENDIF
	totdur=systime(/SEC)-startsystime	
	PRINT,'.............................. hedc_solar_event.pro completed!!!!!!!!!'
	PRINT,'........ DPs successfully completed: '+STRN(DPjobdone)+' out of '+STRN(DPjobnbr)+' ('+STRN(100*FLOAT(DPjobdone)/DPjobnbr)+'%)'
	PRINT,'.................... in '+STRN(totdur)+' seconds..............................................'
END	; at last !!!
;===============================================================================================================================================
;===============================================================================================================================================
;===============================================================================================================================================
;===============================================================================================================================================
;===============================================================================================================================================
;===============================================================================================================================================



