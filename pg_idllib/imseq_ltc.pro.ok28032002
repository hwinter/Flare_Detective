;+
;
; NAME:
;       imseq_ltc
;
; PROJECT: 
;       rhessi - data analysis
;
; PURPOSE: 
;       compute a lightcurve from a sequence of images
;       Method:
;          A.) Compute a total image OR
;          B.) Compute a total image from minframe to maxframe
;       then choose ROI based on a specified contour level of this
;       image
;
;
; CALLING SEQUENCE:
;       imseq_ltc,ptr,lev=lev,tim=tim,lc=lc,minframe=minframe,maxframe=maxframe
;
; INPUTS:
;       ptr: array of pointer to map structures
;       lev: percent of maximum of total image used for selecting the ROI
;       min-,max- frame: minimum,maximum frame for the total image to
;                 be computed in order to get THE ROI
;
; OUTPUT:
;       by keywords
;       
; KEYWORDS:
;       lc,tim: lightcurve & time array 
;
; EXAMPLE:
;        
;
; VERSION:
;       28-JAN-2003 (re)written, based on imaginglightcurvemap
;       13-MAR-2003 modified...
;       25-MAR-2003 updated header
;
; COMMENT:
;       
; AUTHOR
;       Paolo Grigis, Institute for Astronomy, ETH, Zurich
;-

PRO imseq_ltc,ptr,lev=lev,lc=lc,tim=tim,totalflux=totalflux $
             ,minframe=minframe,maxframe=maxframe;,roi=roi

; initialisation

dim=size(ptr)


;; -------------------------------------------------------------------
;; find max in the sequence
;; -------------------------------------------------------------------

;;

;; maxim=0

;; FOR t=0,dim[1]-1 DO BEGIN       ;time intervals
;;     IF ptrim[t] NE ptr_new() THEN BEGIN
;;         IF max((*ptrim[t]).data) GT maxim THEN BEGIN
;;             maxim=max((*ptrim[t]).data)
;;             maxtime=t
;;         ENDIF
;;     ENDIF
;; ENDFOR



;------------------------------------------------------
;define region of interest (ROI)
;------------------------------------------------------


IF NOT exist(lev) THEN lev=0.5

totmap=summaps(ptr,min=minframe,max=maxframe)
data=totmap.data


; low=0
; WHILE ptrim[low] EQ ptr_new() DO low=low+1
 


; IF NOT exist(roi) THEN BEGIN
;     data=(*ptrim[low]).data
;     FOR i=low,dim[1]-1 DO BEGIN
;         IF ptrim[i] NE ptr_new() THEN $
;         data=data+(*ptrim[i]).data
;     ENDFOR


q=ptr_new(where2(data GT lev*max(data)))  

roi=q

;q gives the ROI

;ENDIF ELSE q=roi


;----------------------------------------------------------
;generate lightcurve
;----------------------------------------------------------

lc=fltarr(dim[1])
tim=dblarr(dim[1])


maxim=0

IF NOT exist(totalflux) THEN numpix=(size(*roi))[2] $
ELSE numpix=1

FOR t=0,dim[1]-1 DO BEGIN       ;time intervals

    IF ptr[t] NE ptr_new() THEN BEGIN 
        lc[t]=total((*ptr[t]).data[(*q)[0,*],(*q)[1,*]])/numpix

        tim[t]=anytim((*ptr[t]).time)
    ENDIF ELSE $
    BEGIN
        lc[t]=!values.F_NAN 

        tim[t]=!values.F_NAN   
    ENDELSE
ENDFOR
  
lc=lc[where(finite(lc))]
tim=tim[where(finite(tim))]

END






















